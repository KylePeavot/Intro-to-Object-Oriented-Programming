#BlueJ class context
comment0.target=TaxiCoTest
comment0.text=\r\n\ The\ test\ class\ TaxiCoTest.\r\n\r\n\ @author\ David\ J.\ Barnes\ (d.j.barnes@kent.ac.uk)\r\n\ @version\ 2016.11.02\r\n
comment1.params=
comment1.target=TaxiCoTest()
comment1.text=\r\n\ Constructor\ for\ test\ class\ TaxiCoTest\r\n
comment10.params=
comment10.target=void\ removeTaxi()
comment11.params=
comment11.target=void\ moveTaxi()
comment12.params=
comment12.target=void\ findNoTaxis()
comment13.params=
comment13.target=void\ findTaxiNoneFree()
comment14.params=
comment14.target=void\ findTaxiOneFree()
comment15.params=
comment15.target=void\ findTaxiLowest()
comment16.params=
comment16.target=void\ findTaxiLowestMultiple()
comment17.params=
comment17.target=void\ findTaxiNeighbours()
comment18.params=
comment18.target=void\ findTaxiNeighboursOneFree()
comment19.params=
comment19.target=void\ findTaxiNeighboursFurther()
comment2.params=
comment2.target=void\ setUp()
comment2.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\ Generates\ random\ values\ for\ the\ taxis.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment20.params=
comment20.target=void\ findTaxiMultipleNeighbours()
comment3.params=id\ area\ free
comment3.target=Taxi\ makeTaxi(int,\ int,\ boolean)
comment3.text=\r\n\ Make\ a\ new\ taxi.\r\n
comment4.params=
comment4.target=void\ tearDown()
comment4.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment5.params=
comment5.target=void\ size()
comment6.params=
comment6.target=void\ sizeArea0()
comment7.params=
comment7.target=void\ sizeChosenArea()
comment8.params=
comment8.target=void\ list()
comment9.params=
comment9.target=void\ remove0()
numComments=21
